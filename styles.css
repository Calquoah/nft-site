/* General CSS */

/* 
Challenge:
1. Refactor the CSS to make it DRYer
   by grouping selectors together where
   possible.
*/

body {
    font-family: 'Roboto', sans-serif;
    font-size: 16px;
    color: #2b283a;
    margin: 0; /* to override the default browser margin */
}

/* Something to note:

When an element touches its parent, its
top and bottom margins will merge with the 
margins of the parent element 

What's the Solution to this problem?

To add padding to the parent element

*/

/* 
Challenge:
1. Create a "section" selector and give it the 
   same padding as the header.
2. In index.html, find the image of the purple 
   sneakers and attach a class to it. 
3. Make it so this image takes up 100% 
   of the section width.
*/

/* Typography */

/* 
Challenge:
1. Add CSS so the text in the first section 
   renders correctly. 
⚠️ Watch out for the amount of white space 
   you have between the start of the section 
   and the h2.
⚠️ Don't write too much code!
*/

h1, h3 {
    margin: 0;
}

h1 {
    font-size: 36px;
    color: whitesmoke;
}

h2 {
    /*font-size: 24px;
    color: #2b283a;*/ 

    /* You don't need to set the size and color
    properties because the body selector has already
    been set with these parameters */

    margin-top: 0;
}


h3 {
    font-size: 20px;
    color: #d0aaff;
}

/* Links */

/* 
Challenge:
1. Increase the line-height of the 
   paragraph text to 23px;
*/

p {
    line-height: 23px;
}


/*p {
    font-size: 16px;
    color: #2b283a;

    Likewise, you don't need to set size
    and color because the body selector has
    taken care of that for you

}*/

/* 
Challenge:
1. Set the color of the link in the paragraph.
2. Make the link color change on hover and 
   active states.
3. Search online to find out how you can give 
   the underline a dotted appearance. 
*/

a {
    color: #ef5839;
    text-decoration: dotted underline;
}

a:hover, a:active {
    color: #d4b44c;
}

/* p > a:active {
    color: #d4b44c;
} */

/* 
Challenge:
1. Style the 4 button-style links as per 
   the specifications on the slide.
2. Remember to group the selectors
   where possible to keep the CSS DRY.
⚠️ Think: what would make good class
   names for these links? 
*/

/* 

My Solution

.buy-btn, 
.info-btn, 
.contact-btn, 
.about-btn {
    padding: 10px 19px;
    border-radius: 4.6px;
    font-weight: 600;
}

.info-btn, .about-btn {
    color: #5f29a3;
}

.info-btn {
    background-color: #f0e0ff;
}

.buy-btn {
    background-color: #5f29a3;
    color: whitesmoke;
}

.buy-btn:hover {
    background-color: #f3e885;
    color: #2b283a;
}

.about-btn {
    background-color: whitesmoke;
} */

/* Instructor's Solution:*/

/* Challenge:
1. Use the "display" property to make the
   new links behave more like buttons!
*/


/* 
Challenge:
1. Refactor the CSS for these button-style
   links using two classes on each link
   element.
⚠️ Think what to call the new class you
   will need to create.
*/

.btn {
    padding: 10px 19px;
    border-radius: 4.6px;
    font-weight: 500;
    text-decoration: none;
    display: inline-block;
}


.btn-dark {
    background-color: #5f29a3;
    color: whitesmoke;
}

.btn-mid {
    background-color: #f0e0ff;
    color: #5f29a3;
}

.btn-light {
    background-color: whitesmoke;
    color: #5f29a3;
}

.btn:hover,
.btn:active {
    background-color: #f3e885;
    color: #2b283a;
}


/* Layout */

/* 
Challenge:
1. Give the images in section two a class.
2. Use that class to set the width and 
   border-radius for the images.
3. Wrap the two images in a container div 
   and give it a class.
4. Create the CSS selector for that class 
   and use flex-box to layout the images
   as shown in the slide.
*/

header, 
section, 
footer {
    padding: 45px 0px;
}

header, .section-two {
    background-color: #5f29a3;
}

/* section {

} */

/* Challenge:
1. Center the footer's text horizontally.
2. Give the text space top and bottom.
   ⚠️ Don't add margin! Look at sections
   and header for inspiration. 
3. Give the text the correct color.
*/

footer {
    text-align: center;
    color: #5f29a3;
}

.section-two {
    color: whitesmoke;
}

.container {
    width: 620px;
    margin: 0 auto;
}

.main-image {
    width: 100%;
}


.feature-image {
    width: 300px;
    border-radius: 4.6px;
}

.section-two-image-container {
    display: flex;
    justify-content: space-between;
}

/* CSS Specificity

ID's beat out Class's which beat out
Element selectors

Think about the CSS Point System

Element = 1 point

Class = 10 points

ID = 100 points

*/

/* 
Challenge:
1. Create a compound selector which
targets the anchor links inside the
class "links-container".
2. Set their color to dodgerblue.
3. Set the size to 20px.
4. Remove the underline.

Stretch Goal:
1. Put a hover state on them so
the color changes to fuschia when
the cursor hovers over them.
*/

/* 
.links-container a {
    color: dodgerblue;
    font-size: 20px;
    text-decoration: none;
} 
    
.links-container a:hover {
    color: fuchsia;
}

*/


/* 
Challenge:
1. Change the buttons to links.
2. Style them like buttons so they
   look the same. (you can re-use 
   most of the CSS!)
⚠️ This will cause a layout issue!
 */

/* button{
    padding: 10px 19px;
    border-radius: 4px;
    background-color: #fff200;
    background-color: gold;
    font-size: 14px;
    cursor: pointer;
    color: #1d1e22;
    border: none;
    margin-top: 20px
} */

/* a { 
    background-color: #fff200;
    background-color: gold;
    font-size: 14px;
    cursor: pointer;
    color: #1d1e22;
    border: none;
    margin-top: 20px;
}

*/

/* Solution:

/* 
Challenge:
1. Change the buttons to links.
2. Style them like buttons so they
   look the same. (you can re-use 
   most of the CSS!)
⚠️ This will cause a layout issue!


 a{
    padding: 10px 19px;
    border-radius: 4px;
    background-color: #fff200;
    background-color: gold;
    font-size: 14px;
    cursor: pointer;
    color: #1d1e22;
    border: none;
    margin-top: 20px
}

*/

/* Block Elements

- They stack on top of each other

- Examples include, div, p, h1, and they are all
elements

- Also, you can set the height and margin top and
bottom on a block element


Next are Inline Elements

- They sit side by side

- Some examples, include, <span> and <a> tags

- Also, you cannot set the height and marin
top and bottom on an inline element

Then you have Inline-block elements

- They sit side by side like inline elements

- Button and input are examples of inline-block elements

- You can set the height and margin top
and bottom of inline-block elements

*/